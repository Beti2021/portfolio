




/*import React, { useState } from "react";
import './CreateAcc.css'; // Import the CSS file

function CreateAcc() {
  const [position, setPosition] = useState(""); // For handling position
  const [userId, setUserId] = useState(""); // For handling user id when position is student
  const [username, setUsername] = useState(""); // For handling username when position is admin or proctor
  const [fullName, setFullName] = useState(""); // For handling full name
  const [password, setPassword] = useState(""); // For handling password
  const [confirmPassword, setConfirmPassword] = useState(""); // For handling confirm password
  const [gender, setGender] = useState(""); // For handling gender

  const handlePositionChange = (event) => {
    setPosition(event.target.value);
    if (event.target.value !== "student") {
      setUserId(""); // Reset User ID if position is not student
    }
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    // Create a new user object
    const newUser = {
      fullName,
      position,
      username,
      password,
      gender,
      userId,
    };

    // Store user data in localStorage (you can also use a state management library like Redux)
    const users = JSON.parse(localStorage.getItem("users")) || [];
    users.push(newUser);
    localStorage.setItem("users", JSON.stringify(users));

    // Reset form fields after submission
    setFullName("");
    setPosition("");
    setUsername("");
    setPassword("");
    setConfirmPassword("");
    setGender("");
    setUserId(""); // Reset User ID if position is student
  };

  return (
    <div className="create-account-container">
      <div className="create-account-form">
        <h1>Create Account</h1>
        <form onSubmit={handleSubmit}>
          
          <div className="input-group">
            <label htmlFor="fullName">Full Name</label>
            <input
              type="text"
              id="fullName"
              placeholder="Enter your full name"
              value={fullName}
              onChange={(e) => setFullName(e.target.value)}
            />
          </div>

          
          <div className="input-group">
            <label htmlFor="position">Position</label>
            <select
              id="position"
              value={position}
              onChange={handlePositionChange}
            >
              <option value="">Select Position</option>
              <option value="admin">Admin</option>
              <option value="student">Student</option>
              <option value="proctor">Proctor</option>
            </select>
          </div>

          
          {position === "student" && (
            <div className="input-group">
              <label htmlFor="userId">User ID</label>
              <input
                type="text"
                id="userId"
                placeholder="Enter your user ID"
                value={userId}
                onChange={(e) => setUserId(e.target.value)}
              />
            </div>
          )}

          
          {(position === "admin" || position === "proctor") && (
            <div className="input-group">
              <label htmlFor="username">Username</label>
              <input
                type="text"
                id="username"
                placeholder="Enter your username"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
              />
            </div>
          )}

          
          <div className="input-group">
            <label htmlFor="password">Password</label>
            <input
              type="password"
              id="password"
              placeholder="Enter your password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>

        
          <div className="input-group">
            <label htmlFor="confirmPassword">Confirm Password</label>
            <input
              type="password"
              id="confirmPassword"
              placeholder="Confirm your password"
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
            />
          </div>

          
          <div className="input-group">
            <label htmlFor="gender">Gender</label>
            <select
              id="gender"
              value={gender}
              onChange={(e) => setGender(e.target.value)}
            >
              <option value="">Select Gender</option>
              <option value="male">Male</option>
              <option value="female">Female</option>
              <option value="other">Other</option>
            </select>
          </div>

          
          <div className="button-group">
            <button type="submit">Create Account</button>
          </div>
        </form>
      </div>
    </div>
  );
}

export default CreateAcc;
*/














import React, { useState } from "react";
import './Registration.css'; // Assuming you have a separate CSS file for styling

function Registration() {
  // State for form fields
  const [firstName, setFirstName] = useState("");
  const [middleName, setMiddleName] = useState("");
  const [lastName, setLastName] = useState("");
  const [age, setAge] = useState("");
  const [userId, setUserId] = useState("");
  const [password, setPassword] = useState("");
  const [cityPrivilege, setCityPrivilege] = useState("");
  const [zone, setZone] = useState("");
  const [dormBlock, setDormBlock] = useState("Block A");
  const [dormNumber, setDormNumber] = useState("");
  const [department, setDepartment] = useState("");
  const [classYear, setClassYear] = useState("");
  const [gender, setGender] = useState("");
  const [kebeleId, setKebeleId] = useState(null);
  const [photo, setPhoto] = useState(null);
  const [idCard, setIdCard] = useState(null);

  // Handler for form submission
  const handleSubmit = (e) => {
    e.preventDefault();

    // Create an object to store the user's data
    const user = {
      firstName,
      middleName,
      lastName,
      age,
      userId,
      password,
      cityPrivilege,
      zone,
      dorm: { block: dormBlock, number: dormNumber },
      department,
      classYear,
      gender,
      kebeleId,
      photo,
      idCard,
    };

    // Store the user data (example in localStorage for persistence)
    localStorage.setItem("user", JSON.stringify(user));

    // Clear the form
    alert("Registration successful!");
    setFirstName("");
    setMiddleName("");
    setLastName("");
    setAge("");
    setUserId("");
    setPassword("");
    setCityPrivilege("");
    setZone("");
    setDormBlock("Block A");
    setDormNumber("");
    setDepartment("");
    setClassYear("");
    setGender("");
    setKebeleId(null);
    setPhoto(null);
    setIdCard(null);
  };

  return (
    <div className="registration-container">
      <div className="form-wrapper">
      <form className="registration-form" onSubmit={handleSubmit}>
        {/* Full Name */}
        <h2>Registration</h2>
        <div className="input-group">
          <label>First Name</label>
          <input
            type="text"
            placeholder="First Name"
            value={firstName}
            onChange={(e) => setFirstName(e.target.value)}
            required
          />
        </div>
        <div className="input-group">
          <label>Middle Name</label>
          <input
            type="text"
            placeholder="Middle Name"
            value={middleName}
            onChange={(e) => setMiddleName(e.target.value)}
          />
        </div>
        <div className="input-group">
          <label>Last Name</label>
          <input
            type="text"
            placeholder="Last Name"
            value={lastName}
            onChange={(e) => setLastName(e.target.value)}
            required
          />
        </div>

        {/* Age */}
        <div className="input-group">
          <label>Age</label>
          <input
            type="number"
            placeholder="Age"
            value={age}
            onChange={(e) => setAge(e.target.value)}
            required
          />
        </div>

        {/* User ID */}
        <div className="input-group">
          <label>User ID</label>
          <input
            type="text"
            placeholder="User ID"
            value={userId}
            onChange={(e) => setUserId(e.target.value)}
            required
          />
        </div>

        {/* Password */}
        <div className="input-group">
          <label>Password</label>
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </div>

        {/* City/Privilege */}
        <div className="input-group">
          <label>City/Privilege</label>
          <input
            type="text"
            placeholder="City or Privilege"
            value={cityPrivilege}
            onChange={(e) => setCityPrivilege(e.target.value)}
            required
          />
        </div>

        {/* Zone */}
        <div className="input-group">
          <label>Zone</label>
          <input
            type="text"
            placeholder="Zone"
            value={zone}
            onChange={(e) => setZone(e.target.value)}
            required
          />
        </div>

        {/* Dorm Block & Number */}
        <div className="input-group">
          <label>Choose Dorm Block</label>
          <select value={dormBlock} onChange={(e) => setDormBlock(e.target.value)}>
            <option value="Block A">Block A</option>
            <option value="Block B">Block B</option>
          </select>
        </div>
        <div className="input-group">
          <label>Choose Dorm Number (1-200)</label>
          <input
            type="number"
            min="1"
            max="200"
            placeholder="Dorm Number"
            value={dormNumber}
            onChange={(e) => setDormNumber(e.target.value)}
            required
          />
        </div>

        {/* Department and Year */}
        <div className="input-group">
          <label>Department</label>
          <input
            type="text"
            placeholder="Department"
            value={department}
            onChange={(e) => setDepartment(e.target.value)}
            required
          />
        </div>
        <div className="input-group">
          <label>Class Year</label>
          <input
            type="text"
            placeholder="Class Year"
            value={classYear}
            onChange={(e) => setClassYear(e.target.value)}
            required
          />
        </div>

        {/* Gender Selection */}
        <div className="input-group">
          <label>Gender</label>
          <select value={gender} onChange={(e) => setGender(e.target.value)} required>
            <option value="">Select Gender</option>
            <option value="male">Male</option>
            <option value="female">Female</option>
          </select>
        </div>

        {/* File Uploads */}
        <div className="input-group">
          <label>Upload Kebele ID</label>
          <input
            type="file"
            onChange={(e) => setKebeleId(e.target.files[0])}
            required
          />
        </div>
        <div className="input-group">
          <label>Upload Photo</label>
          <input
            type="file"
            onChange={(e) => setPhoto(e.target.files[0])}
            required
          />
        </div>
        <div className="input-group">
          <label>Upload ID Card</label>
          <input
            type="file"
            onChange={(e) => setIdCard(e.target.files[0])}
            required
          />
        </div>

        {/* Submit Button */}
        <div className="button-group">
          <button type="submit">Register</button>
        </div>
      </form>
    </div>
    </div>
  );
}

export default Registration;




import React, { useState } from "react";
import { Link } from "react-router-dom";  // Import Link for navigation
import './Registration.css'; // Assuming you have a separate CSS file for styling
import userStore from "../../UserStore"; // Import the UserStore

function Registration() {
  // State for form fields
  const [firstName, setFirstName] = useState("");
  const [middleName, setMiddleName] = useState("");
  const [lastName, setLastName] = useState("");
  const [age, setAge] = useState("");
  const [userId, setUserId] = useState("");
  const [password, setPassword] = useState("");
  const [cityPrivilege, setCityPrivilege] = useState("");
  const [zone, setZone] = useState("");
  const [dormBlock, setDormBlock] = useState("Block A");
  const [dormNumber, setDormNumber] = useState("");
  const [department, setDepartment] = useState("");
  const [classYear, setClassYear] = useState("");
  const [gender, setGender] = useState("");
  const [kebeleId, setKebeleId] = useState(null);
  const [photo, setPhoto] = useState(null);
  const [idCard, setIdCard] = useState(null);

  // State to handle the registration success message and display the user's info
  const [registrationSuccess, setRegistrationSuccess] = useState(false);
  const [studentInfo, setStudentInfo] = useState(null);

  // Handler for form submission
  const handleSubmit = (e) => {
    e.preventDefault();

    // Gender-based dorm block and number assignment
    const assignedDormBlock = gender === "male" ? "Block A" : "Block B";
    const assignedDormNumber = gender === "male" ? "101" : "102"; // Example, you can have a logic for dorm numbers

    // Create an object to store the user's data
    const user = {
      firstName,
      middleName,
      lastName,
      age,
      userId,
      password,
      cityPrivilege,
      zone,
      dorm: { block: assignedDormBlock, number: assignedDormNumber },
      department,
      classYear,
      gender,
      kebeleId,
      photo,
      idCard,
      isRegistered: true,  // Mark the user as registered after registration
    };

    // Store the user data in UserStore
    userStore.addUser(user);

    // Set the registration success and show the student information
    setRegistrationSuccess(true);
    setStudentInfo(user);

    // Clear the form (optional)
    alert("Registration successful!");
    setFirstName("");
    setMiddleName("");
    setLastName("");
    setAge("");
    setUserId("");
    setPassword("");
    setCityPrivilege("");
    setZone("");
    setDormBlock("Block A");
    setDormNumber("");
    setDepartment("");
    setClassYear("");
    setGender("");
    setKebeleId(null);
    setPhoto(null);
    setIdCard(null);
  };

  return (
    <div className="registration-container">
      {/* Navbar */}
      <nav className="navbar">
        <ul>
          <li>
            <Link to="/">Home</Link>
          </li>
          <li>
            <Link to="/student">Student Dashboard</Link> 
          </li>
        </ul>
      </nav>

      <div className="form-wrapper">
        {registrationSuccess ? (
          <div className="success-message">
            <h3>Registration Successful!</h3>
            <p>Waiting for approval...</p>
            
            {/* Displaying Student Information in a Table */}
            <h4>Student Information</h4>
            <table className="student-info-table">
              <thead>
                <tr>
                  <th>Field</th>
                  <th>Details</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Name</td>
                  <td>{studentInfo.firstName} {studentInfo.middleName} {studentInfo.lastName}</td>
                </tr>
                <tr>
                  <td>Age</td>
                  <td>{studentInfo.age}</td>
                </tr>
                <tr>
                  <td>User ID</td>
                  <td>{studentInfo.userId}</td>
                </tr>
                <tr>
                  <td>City Privilege</td>
                  <td>{studentInfo.cityPrivilege}</td>
                </tr>
                <tr>
                  <td>Zone</td>
                  <td>{studentInfo.zone}</td>
                </tr>
                <tr>
                  <td>Gender</td>
                  <td>{studentInfo.gender}</td>
                </tr>
                <tr>
                  <td>Department</td>
                  <td>{studentInfo.department}</td>
                </tr>
                <tr>
                  <td>Class Year</td>
                  <td>{studentInfo.classYear}</td>
                </tr>
                <tr>
                  <td>Assigned Dorm</td>
                  <td>{studentInfo.dorm.block} - Dorm Number: {studentInfo.dorm.number}</td>
                </tr>
              </tbody>
            </table>
          </div>
        ) : (
          <form className="registration-form" onSubmit={handleSubmit}>
            {/* Full Name */}
            <h2>Registration</h2>
            <div className="input-group">
              <label>First Name</label>
              <input
                type="text"
                placeholder="First Name"
                value={firstName}
                onChange={(e) => setFirstName(e.target.value)}
                required
              />
            </div>
            <div className="input-group">
              <label>Middle Name</label>
              <input
                type="text"
                placeholder="Middle Name"
                value={middleName}
                onChange={(e) => setMiddleName(e.target.value)}
              />
            </div>
            <div className="input-group">
              <label>Last Name</label>
              <input
                type="text"
                placeholder="Last Name"
                value={lastName}
                onChange={(e) => setLastName(e.target.value)}
                required
              />
            </div>

            {/* Age */}
            <div className="input-group">
              <label>Age</label>
              <input
                type="number"
                placeholder="Age"
                value={age}
                onChange={(e) => setAge(e.target.value)}
                required
              />
            </div>

            {/* User ID */}
            <div className="input-group">
              <label>User ID</label>
              <input
                type="text"
                placeholder="User ID"
                value={userId}
                onChange={(e) => setUserId(e.target.value)}
                required
              />
            </div>

            {/* Password */}
            <div className="input-group">
              <label>Password</label>
              <input
                type="password"
                placeholder="Password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
              />
            </div>

            {/* City/Privilege */}
            <div className="input-group">
              <label>City/Privilege</label>
              <input
                type="text"
                placeholder="City or Privilege"
                value={cityPrivilege}
                onChange={(e) => setCityPrivilege(e.target.value)}
                required
              />
            </div>

            {/* Zone */}
            <div className="input-group">
              <label>Zone</label>
              <input
                type="text"
                placeholder="Zone"
                value={zone}
                onChange={(e) => setZone(e.target.value)}
                required
              />
            </div>

            {/* Dorm Block & Number */}
            <div className="input-group">
              <label>Choose Dorm Block</label>
              <select value={dormBlock} onChange={(e) => setDormBlock(e.target.value)}>
                <option value="Block A">Block A</option>
                <option value="Block B">Block B</option>
              </select>
            </div>
            <div className="input-group">
              <label>Choose Dorm Number (1-200)</label>
              <input
                type="number"
                min="1"
                max="200"
                placeholder="Dorm Number"
                value={dormNumber}
                onChange={(e) => setDormNumber(e.target.value)}
                required
              />
            </div>

            {/* Department and Year */}
            <div className="input-group">
              <label>Department</label>
              <input
                type="text"
                placeholder="Department"
                value={department}
                onChange={(e) => setDepartment(e.target.value)}
                required
              />
            </div>
            <div className="input-group">
              <label>Class Year</label>
              <input
                type="text"
                placeholder="Class Year"
                value={classYear}
                onChange={(e) => setClassYear(e.target.value)}
                required
              />
            </div>

            {/* Gender Selection */}
            <div className="input-group">
              <label>Gender</label>
              <select value={gender} onChange={(e) => setGender(e.target.value)} required>
                <option value="">Select Gender</option>
                <option value="male">Male</option>
                <option value="female">Female</option>
              </select>
            </div>

            {/* File Uploads */}
            <div className="input-group">
              <label>Upload Kebele ID</label>
              <input
                type="file"
                onChange={(e) => setKebeleId(e.target.files[0])}
                required
              />
            </div>
            <div className="input-group">
              <label>Upload Photo</label>
              <input
                type="file"
                onChange={(e) => setPhoto(e.target.files[0])}
                required
              />
            </div>
            <div className="input-group">
              <label>Upload ID Card</label>
              <input
                type="file"
                onChange={(e) => setIdCard(e.target.files[0])}
                required
              />
            </div>

            {/* Submit Button */}
            <div className="button-group">
              <button type="submit">Register</button>
            </div>
          </form>
        )}
      </div>
    </div>
  );
}

export default Registration;




import React, { useState } from "react";
import { useNavigate } from "react-router-dom"; 
import './CreateAcc.css';  
import UserStore from "../UserStore";  

function CreateAcc() {
  const [position, setPosition] = useState("");  
  const [userId, setUserId] = useState("");  
  const [fullName, setFullName] = useState("");  
  const [password, setPassword] = useState("");  
  const [confirmPassword, setConfirmPassword] = useState(""); 
  const [gender, setGender] = useState("");  

  const navigate = useNavigate();  

  const handleSubmit = (event) => {
    event.preventDefault();

    
    if (password !== confirmPassword) {
      alert("Passwords do not match");
      return;
    }

  
    if (!fullName || !userId || !password || !gender || !position) {
      alert("All fields are required");
      return;
    }

    
    const newUser = {
      fullName,
      position,
      userId,
      password,
      gender,
      isRegistered: false,  
    };

    
    UserStore.addUser(newUser);
    console.log(newUser);

    
    if (position === "student") {
      navigate("/student");  
    } else if (position === "admin") {
      navigate("/admin");  
    } else if (position === "proctor") {
      navigate("/proctor");  
    }
  };

  return (
    <div className="create-account-container">
        
      <form onSubmit={handleSubmit} className="create-account-form">
      <h1>Create Account</h1>
      
        <div className="input-group">
          <label htmlFor="position" className="input-label">Position</label>
          <select
            id="position"
            className="input-field"
            value={position}
            onChange={(e) => setPosition(e.target.value)}
            required
          >
            <option value="">Select Position</option>
            <option value="student">Student</option>
            <option value="admin">Admin</option>
            <option value="proctor">Proctor</option>
          </select>
        </div>

        
        <div className="input-group">
          <label htmlFor="fullName" className="input-label">Full Name</label>
          <input
            type="text"
            id="fullName"
            className="input-field"
            value={fullName}
            onChange={(e) => setFullName(e.target.value)}
            required
            placeholder="Enter your full name"
          />
        </div>

        
        {position === "student" && (
          <div className="input-group">
            <label htmlFor="userId" className="input-label">User ID (for Student)</label>
            <input
              type="text"
              id="userId"
              className="input-field"
              value={userId}
              onChange={(e) => setUserId(e.target.value)}
              required
              placeholder="Enter your student ID"
            />
          </div>
        )}

        
        <div className="input-group">
          <label htmlFor="password" className="input-label">Password</label>
          <input
            type="password"
            id="password"
            className="input-field"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
            placeholder="Enter your password"
          />
        </div>

        
        <div className="input-group">
          <label htmlFor="confirmPassword" className="input-label">Confirm Password</label>
          <input
            type="password"
            id="confirmPassword"
            className="input-field"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
            required
            placeholder="Confirm your password"
          />
        </div>

        
        {position === "student" && (
          <div className="input-group">
            <label htmlFor="gender" className="input-label">Gender</label>
            <select
              id="gender"
              className="input-field"
              value={gender}
              onChange={(e) => setGender(e.target.value)}
              required
            >
              <option value="">Select Gender</option>
              <option value="male">Male</option>
              <option value="female">Female</option>
              <option value="other">Other</option>
            </select>
          </div>
        )}

        
        <div className="button-group">
          <button type="submit" className="create-account-button">Create Account</button>
        </div>
      </form>
    </div>
  );
}

export default CreateAcc;
